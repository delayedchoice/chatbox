exit
(-main)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(-main)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(-main)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
j(name :test0
)
(name :test)
exit
(use 'figwheel-sidecar.repl-api)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
*e
(-main)
exit
(-main)
kj
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(-main)
j
(-main)
exit
(-main)
exit
(-main)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
<<<<<<< Updated upstream
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
=======
>>>>>>> Stashed changes
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
/login
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(doc reset!)
(doc reset(
(doc reset)
(reset)
exit
(reset)
(viime/dev.reset)
(viime.dev/reset)
exit
*e
(user/reset)
*e
(user/go)
(user/init)
(system/system)
(viime.system/system)
*e
(user/reset)
*e
*1
(use 'clojure.stacktrace)
exit
(user/reset)
*e
*1
(user/reset)
exit
(user/reset)
exit
(user/reset)
exit
(user/reset)
exit
(user/reset)
ExceptionInfo Invariant violation in `taoensso.sente:?`. Test form: `((fn* [p1__9746#] (satisfies? interfaces/IServerChanAdapter p1__9746#)) web-server-ch-adapter)` with failing input: `taoensso.sente.server_adapters.http_kit.HttpKitServerChanAdapter@6efbc082`
`pred-form` error: java.lang.NullPointerException  clojure.core/ex-info (core.clj:4617)
ExceptionInfo Invariant violation in `taoensso.sente:?`. Test form: `((fn* [p1__9746#] (satisfies? interfaces/IServerChanAdapter p1__9746#)) web-server-ch-adapter)` with failing input: `taoensso.sente.server_adapters.http_kit.HttpKitServerChanAdapter@6efbc082`
`pred-form` error: java.lang.NullPointerException  clojure.core/ex-info (core.clj:4617)
(user/reset)
ExceptionInfo Invariant violation in `taoensso.sente:?`. Test form: `((fn* [p1__9746#] (satisfies? interfaces/IServerChanAdapter p1__9746#)) web-server-ch-adapter)` with failing input: `taoensso.sente.server_adapters.http_kit.HttpKitServerChanAdapter@6efbc082`
`pred-form` error: java.lang.NullPointerException  clojure.core/ex-info (core.clj:4617)
ExceptionInfo Invariant violation in `taoensso.sente:?`. Test form: `((fn* [p1__9746#] (satisfies? interfaces/IServerChanAdapter p1__9746#)) web-server-ch-adapter)` with failing input: `taoensso.sente.server_adapters.http_kit.HttpKitServerChanAdapter@6efbc082`
`pred-form` error: java.lang.NullPointerException  clojure.core/ex-info (core.clj:4617)
jExceptionInfo Invariant violation in `taoensso.sente:?`. Test form: `((fn* [p1__9746#] (satisfies? interfaces/IServerChanAdapter p1__9746#)) web-server-ch-adapter)` with failing input: `taoensso.sente.server_adapters.http_kit.HttpKitServerChanAdapter@6efbc082`kj
exit
(user/reset)
exit
(user/reset)
exit
(user/reset)
exit
(user/go)
exit
(user/go)
exit
(user/go)
(user/stop)
(user/go)
exit
(user/go)
k
(user/stop)
(user/go)
(user/stop)
(user/go)
exit
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
exit
(user/go)
(user/stop)
(user/go)
(user/stop)
exit
(user/go)
(user/stop)
(user/go)
exit
(user/go)
(user/stop)
(user/go)
(user/stop)
exit
(user/go)
(user/stop)
(user/go)
(user/stop)
exit
(user/go)
(user/stop)
lbdb
(user/go)
(user/stop)
exit
(user/go)
(user/stop)
(user/go)
(user/stop)
exit
(user/go)
(user/stop)
(user/go)
exit
(user/go)
(user/stop)
(user/go)
kj
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
exit
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
exit
(user/go)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(stop-figwheel!)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
jj
exit
(user/go)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
exit
(user/go)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
:w
(user/go)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
(user/stop)
(user/go)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
(user/start)
xit
(user/stop)
(user/start)
(user/go)
kexit
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
(user/stop)
(user/go)
exit
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
exit
(user/go)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
jjj
exit
(user/go)
exit
(user/go)
exit
(user/go)
(use 'figwheel-sidecar.repl-api)
(start-figwheel!)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
(#function[compojure.core/routes/fn--4732])
compojure.core/routes/fn--4732)
(compojure.core/routes/fn--4732)
compojure.core/routes/fn--4732
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
(user/stop)
(user/go)
(doseq 
(user/stop)
(doe
(doseq [user {:key :value}] (prn "Key: " (first user)))
(user/stop)
(user/go)
(user/stop)
(user/go)
exit
(user/go)
exit
(user/go)
(user/stop)
(user/go)
exit
(user/go)
exit
(user/go)
lb
j/
exit
(user/go)
lb
exit
(user/go)
exit
(user/go)
exit
(user/go)
(doc contains)
(doc contains?)
(user/stop)
(doc find)
(doc filter)
(user/go)
(defn map-values
  #_=>   [m keys f & args]
  #_=>   (reduce #(apply update-in %1 [%2] f args) m keys))
(map-values {:a true :b "test"} [:a] identity false)
(map-values {:a true :b "test"} [:a] constantly false)
(map-values {:a true :b "test"} [:a] (constantly false))
(doc filter)
(user/go)
exit
(user/go)
kj
k:e
exit
(user/go)
exit
(user/go)
exit
(user/go)
exit
(user/go)
(doc doseq)
(user/go)
exit
(user/go)
